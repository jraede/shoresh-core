// Generated by CoffeeScript 1.6.2
(function() {
  define(['core/social/facebook/api'], function(FBApi) {
    var FacebookUser;

    return FacebookUser = (function() {
      FacebookUser.prototype.id = null;

      FacebookUser.prototype.userInfo = {};

      FacebookUser.prototype.friends = [];

      FacebookUser.prototype.inMiddleOfRetrievingData = false;

      FacebookUser.prototype.infoCallbacks = [];

      function FacebookUser(id) {
        this.id = id;
      }

      FacebookUser.prototype.getInfo = function(field, callback) {
        var _this = this;

        if (this.userInfo.id && this.userInfo[field]) {
          return callback(this.userInfo[field]);
        } else if (this.inMiddleOfRetrievingData) {
          return this.infoCallbacks.push({
            field: field,
            callback: callback
          });
        } else {
          this.inMiddleOfRetrievingData = true;
          return FBApi.getUserInfo('me', false, function(response) {
            _this.inMiddleOfRetrievingData = false;
            _this.userInfo = response;
            callback(_this.userInfo[field]);
            return _this.executeInfoCallbacks();
          });
        }
      };

      /*
      		 * Returns the URL of a user's profile picture
      		 *
      		 * @param string size ->
      		 *		'square' :: 50x50
      		 *		'small'  :: 50x?
      		 *		'normal' :: 100x?
      		 *		'large'  :: 200x?
      */


      FacebookUser.prototype.profilePicture = function(size) {
        if (size) {
          size = '?type=' + size;
        } else {
          size = '';
        }
        return 'http://graph.facebook.com/' + this.id + '/picture' + size;
      };

      FacebookUser.prototype.executeInfoCallbacks = function() {
        var callback, _i, _len, _ref;

        _ref = this.infoCallbacks;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          callback = _ref[_i];
          this.getInfo(callback.field, callback.callback);
        }
        return this.infoCallbacks = [];
      };

      FacebookUser.prototype.getFriends = function(callback) {
        var _this = this;

        if (this.friends.length) {
          return callback(this.friends);
        } else {
          return FBApi.request('/me/friends', function(response) {
            _this.friends = response.data;
            return callback(_this.friends);
          });
        }
      };

      return FacebookUser;

    })();
  });

}).call(this);
