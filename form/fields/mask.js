// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'core/form/field', 'core/form/maskedInput'], function($, Field) {
    var Mask;
    $.mask.definitions['~'] = '[\d+]';
    return Mask = (function(_super) {

      __extends(Mask, _super);

      function Mask() {
        return Mask.__super__.constructor.apply(this, arguments);
      }

      Mask.prototype.tagName = 'div';

      Mask.prototype.render = function() {
        var input, label;
        label = $('<label/>').html(this.options.label).appendTo(this.$el);
        input = $('<input type="text"/>').val(this.val).appendTo(this.$el);
        if (this.options.help) {
          $('<p class="help-block"/>').html(this.options.help).insertBefore(input);
        }
        this.postRender();
        return this.$el;
      };

      Mask.prototype.postRender = function() {
        Mask.__super__.postRender.apply(this, arguments);
        return this.$('input').mask(this.options.mask);
      };

      return Mask;

    })(Field);
  });

}).call(this);
