// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['core/form/fields/text', 'jquery', 'core/form/priceMask'], function(Text, $) {
    var Price, _ref;

    return Price = (function(_super) {
      __extends(Price, _super);

      function Price() {
        _ref = Price.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Price.prototype.postRender = function() {
        this.$('input').priceFormat({
          prefix: '$',
          thousandsSeparator: ''
        });
        return Price.__super__.postRender.apply(this, arguments);
      };

      Price.prototype.populateModel = function() {
        var price, property;

        price = this.$('input').val();
        property = this.options.property;
        return this.model.set(property, price.replace(/[^0-9\.]/g, ''));
      };

      Price.prototype.populateSelf = function() {
        var apiFormat, property, val;

        apiFormat = this.options.apiFormat;
        property = this.options.property;
        val = this.model.get(property);
        if (val) {
          return this.$('input').val('$' + val);
        }
      };

      return Price;

    })(Text);
  });

}).call(this);
