// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['core/form/fields/mask', 'moment'], function(Mask, moment) {
    var DateMask, _ref;

    return DateMask = (function(_super) {
      __extends(DateMask, _super);

      function DateMask() {
        _ref = DateMask.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      DateMask.prototype.options = {
        apiFormat: 'YYYY-MM-DD',
        displayFormat: 'MM/DD/YYYY',
        mask: '99/99/9999'
      };

      DateMask.prototype.populateModel = function() {
        var apiFormat, converted, date, displayFormat, property, val;

        apiFormat = this.options.apiFormat;
        displayFormat = this.options.displayFormat;
        val = this.getValue();
        date = moment(val, displayFormat);
        converted = date.format(apiFormat);
        property = this.options.property;
        return this.model.set(property, converted);
      };

      DateMask.prototype.populateSelf = function() {
        var apiFormat, converted, date, displayFormat, property, val;

        apiFormat = this.options.apiFormat;
        displayFormat = this.options.displayFormat;
        property = this.options.property;
        val = this.model.get(property);
        date = moment(val, apiFormat);
        converted = date.format(displayFormat);
        return this.$('input').val(converted);
      };

      return DateMask;

    })(Mask);
  });

}).call(this);
