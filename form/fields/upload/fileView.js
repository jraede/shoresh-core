// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'core/file/html5upload/fileView'], function($, FileView) {
    var SettingsFileView, _ref;

    return SettingsFileView = (function(_super) {
      __extends(SettingsFileView, _super);

      function SettingsFileView() {
        _ref = SettingsFileView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      SettingsFileView.prototype.tagName = 'li';

      SettingsFileView.prototype.className = 'file-upload';

      SettingsFileView.prototype.initialize = function() {
        this.listenTo(this.model, 'change:progress', this.progress);
        this.listenTo(this.model, 'change:status', this.checkStatus);
        return this.listenTo(this.model, 'destroy', this.remove);
      };

      SettingsFileView.prototype.render = function() {
        var progress,
          _this = this;

        this.$el.css('position', 'relative');
        $('<span/>').html(this.model.get('name')).appendTo(this.$el);
        progress = $('<div/>').addClass('progress').appendTo(this.$el);
        this.bar = $('<div/>').addClass('progress-bar').appendTo(progress);
        return $('<button/>').addClass('btn btn-danger btn-small').html('X').appendTo(this.$el).click(function(e) {
          e.preventDefault();
          return _this.model.destroy();
        });
      };

      SettingsFileView.prototype.progress = function(model, percent) {
        var totalWidth;

        totalWidth = this.$el.outerWidth();
        return this.bar.css('width', percent + '%');
      };

      SettingsFileView.prototype.checkStatus = function(model, status) {
        var _this = this;

        if (status === 'complete') {
          return setTimeout(function() {
            return _this.bar.attr('class', 'progress-bar progress-bar-success');
          }, 1000);
        } else if (status === 'error') {
          this.bar.attr('class', 'progress-bar progress-bar-error');
          switch (this.model.get('error')) {
            case 400:
              return this.$el.addClass('error').children('span').html("File type not allowed.");
            default:
              return this.$el.addClass('error').children('span').html("Error - please try again.");
          }
        }
      };

      return SettingsFileView;

    })(FileView);
  });

}).call(this);
