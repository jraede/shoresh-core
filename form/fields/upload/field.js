// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['core/form/field', 'core/form/fields/upload/fileCollectionView', 'core/file/html5upload/uploader'], function(Field, FileCollectionView, Uploader) {
    var Upload, _ref;

    return Upload = (function(_super) {
      __extends(Upload, _super);

      function Upload() {
        _ref = Upload.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Upload.prototype.render = function() {
        var input, label;

        label = $('<label/>').html(this.options.label).appendTo(this.$el);
        input = $('<input type="file"/>').appendTo(this.$el);
        if (this.options.help) {
          $('<p class="help-block"/>').html(this.options.help).insertAfter(input);
        }
        this.postRender();
        return this.$el;
      };

      Upload.prototype.postRender = function() {
        var fileInput, uploader;

        fileInput = this.$('input[type="file"]');
        this.collectionView = new FileCollectionView({
          el: this.el,
          config: this.options.config
        });
        uploader = new Uploader(fileInput, this.options.config, this.collectionView);
        return uploader.init();
      };

      Upload.prototype.getValue = function() {
        var value;

        value = [];
        this.collectionView.collection.each(function(file) {
          if (file.get('status') === 'complete') {
            return value.push(file.get('response'));
          }
        });
        return value;
      };

      return Upload;

    })(Field);
  });

}).call(this);
