// Generated by CoffeeScript 1.6.3
(function() {
  define(['jquery', 'underscore'], function($, _) {
    var Template;
    Template = (function() {
      function Template() {}

      Template.init = function() {
        var _this = this;
        return $(function() {
          var self;
          self = _this;
          return $('script[data-template]').each(function() {
            var template;
            template = $(this).attr('data-template');
            return self.cache[template] = $(this).html();
          });
        });
      };

      Template.cache = {};

      Template.currentlyLoading = [];

      Template.currentlyLoadingCallbacks = {};

      Template.templateFormat = function(template) {
        if (window.shoreshConfig && window.shoreshConfig.templateFormat) {
          return window.shoreshConfig.templateFormat(template);
        }
        return '/includes/templates/' + template + '.php';
      };

      Template.load = function(template, callback) {
        var view,
          _this = this;
        view = this.cache[template];
        if (view) {
          return callback(view);
        } else if (this.currentlyLoading.indexOf(template) >= 0) {
          return this.currentlyLoadingCallbacks[template].push(callback);
        } else {
          this.currentlyLoading.push(template);
          this.currentlyLoadingCallbacks[template] = [];
          return $.get(this.templateFormat(template), function(view) {
            var index, queuedCallback, _i, _len, _ref;
            _this.cache[template] = view;
            _ref = _this.currentlyLoadingCallbacks[template];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              queuedCallback = _ref[_i];
              queuedCallback(view);
            }
            index = _this.currentlyLoading.indexOf(template);
            _this.currentlyLoading.splice(index, 1);
            _this.currentlyLoadingCallbacks[template] = [];
            return callback(view);
          });
        }
      };

      return Template;

    })();
    return Template.init();
  });

}).call(this);
